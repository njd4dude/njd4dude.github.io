/* utility classes */
/* must have animate class for animation to work */
.animate {
  animation-duration: 1s;
  animation-fill-mode: both;
}

.animate.animate--infinite {
  animation-iteration-count: infinite;
}

.animate.animate--delay-1s {
  animation-delay: 1s;
}

.animate.animate--fast {
  animation-duration: 0.6s;
}

.animate.animate--slow {
  animation-duration: 3s;
}
/* Animations */
@keyframes slideInLeft {
  from {
    transform: translateX(-300px);
  }

  to {
    transform: translateX(0);
  }
}

.slideInLeft {
  animation-name: slideInLeft;
  animation-timing-function: ease-in;
}

@keyframes slideInRight {
  from {
    transform: translateX(300px);
  }

  to {
    transform: translateX(0);
  }
}

.slideInRight {
  animation-name: slideInRight;
  animation-timing-function: ease-in;
}

@keyframes rotate {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(360deg);
  }
}

.rotate {
  animation-name: rotate;
  animation-timing-function: linear;

  transform-origin: top left;
}

@keyframes bouncey {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }

  40% {
    transform: translateY(-30px);
  }

  60% {
    transform: translateY(-15px);
  }
}

.bounce {
  animation-name: bouncey;
}

@keyframes doorOpen {
  0% {
    transform: perspective(800px) rotateY(0deg);
  }
  100% {
    transform: perspective(800px) rotateY(-180deg);
  }
}

.doorOpen {
  perspective: 800px;
  transform-style: preserve-3d;
  animation: doorOpen 1s linear forwards; /* Use forwards to keep the final state of the animation */
  transform-origin: left; /*Adjust the transform origin to rotate around the left edge */
}

@keyframes doorClose {
  0% {
    transform: perspective(800px) rotateY(-180deg);
  }
  100% {
    transform: perspective(800px) rotateY(0deg);
  }
}

.doorClose {
  perspective: 800px;
  transform-style: preserve-3d;
  animation: doorClose 1s linear forwards; /* Use forwards to keep the final state of the animation */
  transform-origin: left; /*Adjust the transform origin to rotate around the left edge */
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.textFade {
  animation: fadeOut 0.5s linear 0.15s both;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.textFadeIn {
  animation: fadeIn 0.5s linear 0.5s both;
}

/* left off here took out delay for textFadeIn to remove blinking */
